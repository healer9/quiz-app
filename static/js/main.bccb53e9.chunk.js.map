{"version":3,"sources":["components/SubjectCard.js","questions/DsQues.js","questions/AlgoQues.js","questions/OsQues.js","questions/DbmsQues.js","questions/CnQues.js","questions/OopsQues.js","data/topics.js","components/Subjects.js","components/Header.js","pages/Home.js","details/AboutDetails.js","pages/About.js","details/ContactDetails.js","pages/Contact.js","components/Footer.js","components/TopicPage.js","topic-pages/Ds.js","topic-pages/Algo.js","topic-pages/Os.js","topic-pages/Dbms.js","topic-pages/Cn.js","topic-pages/Oops.js","quiz-header/DsQuizHeader.js","components/ScoreCard.js","components/InfoCard.js","quiz-page/QuizDs.js","quiz-header/AlgoQuizHeader.js","quiz-page/QuizAlgo.js","quiz-header/OsQuizHeader.js","quiz-page/QuizOs.js","quiz-header/DbmsQuizHeader.js","quiz-page/QuizDbms.js","quiz-header/CnQuizHeader.js","quiz-page/QuizCn.js","quiz-header/OopsQuizHeader.js","quiz-page/QuizOops.js","App.js","index.js"],"names":["SubjectCard","props","useState","isMouseOver","setMouseOver","className","onMouseOver","onMouseOut","style","backgroundColor","color","title","DsQues","questionText","answerOptions","answerText","isCorrect","AlgoQues","OsQues","DbmsQues","CnQues","OopsQues","topics","id","path","no_of_questions","length","alloted_time","quiz_path","Subjects","map","topic","to","Header","Home","AboutDetails","AboutTheApp","AboutTheDev","About","ContactDetails","mail","linkedIn","gitHub","Contact","onClick","window","open","Footer","currentYear","Date","getFullYear","TopicPage","alert","Ds","Algo","Os","Dbms","Cn","Oops","DsQuizHeader","ScoreCard","score","Math","floor","value","total","InfoCard","attempt","left","correct","wrong","QuizDs","useBeforeunload","event","preventDefault","end","quesNo","setQues","showScore","setShowScore","setScore","setAttempt","timerSeconds","setTimerSeconds","timerMinutes","setTimerMinutes","useEffect","setTimeout","answerOption","nextQuestion","handleClick","time","AlgoQuizHeader","QuizAlgo","OsQuizHeader","QuizOs","DbmsQuizHeader","QuizDbms","CnQuizHeader","QuizCn","OopsQuizHeader","QuizOops","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bccb53e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction SubjectCard(props) {\r\n    const [isMouseOver, setMouseOver] = useState(false)\r\n\r\n    function handleMouseOver() {\r\n        setMouseOver(true)\r\n    }\r\n\r\n    function handleMouseOut() {\r\n        setMouseOver(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"subject\"\r\n            onMouseOver={handleMouseOver}\r\n            onMouseOut={handleMouseOut}\r\n            style={{\r\n                backgroundColor: isMouseOver && \"#0f4c75\",\r\n                color: isMouseOver && \"#fff\"\r\n            }}>\r\n            <h1 className=\"title\">{props.title}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubjectCard","const DsQues = [\r\n    {\r\n        questionText: 'Linked lists are not suitable for the implementation of __ ?',\r\n        answerOptions: [\r\n            { answerText: 'Insertion sort', isCorrect: false },\r\n            { answerText: 'Radix sort', isCorrect: false },\r\n            { answerText: 'Polynomial manipulation', isCorrect: false },\r\n            { answerText: 'Binary search', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following is not an application of priority queue?',\r\n        answerOptions: [\r\n            { answerText: 'Huffman codes', isCorrect: false },\r\n            { answerText: 'Interrupt handling in operating system', isCorrect: false },\r\n            { answerText: 'Undo operation in text editors', isCorrect: true },\r\n            { answerText: 'Bayesian spam filter', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'When does the ArrayIndexOutOfBoundsException occur?',\r\n        answerOptions: [\r\n            { answerText: 'Compile-time', isCorrect: false },\r\n            { answerText: 'Run-time', isCorrect: true },\r\n            { answerText: 'Not an error', isCorrect: false },\r\n            { answerText: 'Not an exception at all', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following application makes use of a circular linked list?',\r\n        answerOptions: [\r\n            { answerText: 'Undo operation in a text editor', isCorrect: false },\r\n            { answerText: 'Recursive function calls', isCorrect: false },\r\n            { answerText: 'Allocating CPU to resources', isCorrect: true },\r\n            { answerText: 'Implement Hash Tables', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following concepts make extensive use of arrays?',\r\n        answerOptions: [\r\n            { answerText: 'Binary trees', isCorrect: false },\r\n            { answerText: 'Scheduling of processes', isCorrect: false },\r\n            { answerText: 'Caching', isCorrect: false },\r\n            { answerText: 'Spatial locality', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What differentiates a circular linked list from a normal linked list?',\r\n        answerOptions: [\r\n            { answerText: 'You cannot have the ‘next’ pointer point to null in a circular linked list', isCorrect: false },\r\n            { answerText: 'It is faster to traverse the circular linked list', isCorrect: false },\r\n            { answerText: 'You may or may not have the ‘next’ pointer point to null in a circular linked list', isCorrect: true },\r\n            { answerText: 'Head node is known in circular linked list', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What is a memory efficient double linked list?',\r\n        answerOptions: [\r\n            { answerText: 'Each node has only one pointer to traverse the list back and forth', isCorrect: true },\r\n            { answerText: 'The list has breakpoints for faster traversal', isCorrect: false },\r\n            { answerText: 'An auxiliary singly linked list acts as a helper list to traverse through the doubly linked list', isCorrect: false },\r\n            { answerText: 'A doubly linked list that uses bitwise AND operator for storing addresses', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'How do you calculate the pointer difference in a memory efficient double linked list?',\r\n        answerOptions: [\r\n            { answerText: 'head xor tail', isCorrect: false },\r\n            { answerText: 'pointer to previous node xor pointer to next node', isCorrect: true },\r\n            { answerText: 'pointer to previous node – pointer to next node', isCorrect: false },\r\n            { answerText: 'pointer to next node – pointer to previous node', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following is not the application of stack?',\r\n        answerOptions: [\r\n            { answerText: 'A parentheses balancing program', isCorrect: false },\r\n            { answerText: 'Tracking of local variables at run time', isCorrect: false },\r\n            { answerText: 'Compiler Syntax Analyzer', isCorrect: false },\r\n            { answerText: 'Data Transfer between two asynchronous process', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What is the value of the postfix expression 6 3 2 4 + – *?',\r\n        answerOptions: [\r\n            { answerText: '1', isCorrect: false },\r\n            { answerText: '40', isCorrect: false },\r\n            { answerText: '74', isCorrect: false },\r\n            { answerText: '-18', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Queues serve major role in ______________',\r\n        answerOptions: [\r\n            { answerText: 'Simulation of recursion', isCorrect: false },\r\n            { answerText: 'Simulation of arbitrary linked list', isCorrect: false },\r\n            { answerText: 'Simulation of limited resource allocation', isCorrect: true },\r\n            { answerText: 'Simulation of heap sort', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The data structure required for Breadth First Traversal on a graph is?',\r\n        answerOptions: [\r\n            { answerText: 'Array', isCorrect: false },\r\n            { answerText: 'Stack', isCorrect: false },\r\n            { answerText: 'Queue', isCorrect: true },\r\n            { answerText: 'Tree', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following is not the type of queue?',\r\n        answerOptions: [\r\n            { answerText: 'Ordinary queue', isCorrect: false },\r\n            { answerText: 'Single ended queue', isCorrect: true },\r\n            { answerText: 'Circular queue', isCorrect: false },\r\n            { answerText: 'Priority queue', isCorrect: false },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default DsQues;","const AlgoQues = [\r\n    {\r\n        questionText: 'Which of the following is false about a circular linked list?',\r\n        answerOptions: [\r\n            { answerText: 'Every node has a successor', isCorrect: false },\r\n            { answerText: 'Time complexity of inserting a new node at the head of the list is O(1)', isCorrect: true },\r\n            { answerText: 'Time complexity for deleting the last node is O(n)', isCorrect: false },\r\n            { answerText: 'We can traverse the whole circular linked list by starting from any point', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What is the time complexity to insert a node based on key in a priority queue?',\r\n        answerOptions: [\r\n            { answerText: 'O(nlogn)', isCorrect: false },\r\n            { answerText: 'O(logn)', isCorrect: false },\r\n            { answerText: 'O(n)', isCorrect: true },\r\n            { answerText: 'O(n*n)', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What is the time complexity of inserting at the end in dynamic arrays?',\r\n        answerOptions: [\r\n            { answerText: 'O(1)', isCorrect: false },\r\n            { answerText: 'O(n)', isCorrect: false },\r\n            { answerText: 'O(logn)', isCorrect: false },\r\n            { answerText: 'Either O(1) or O(n)', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'What is the space complexity for deleting a linked list?',\r\n        answerOptions: [\r\n            { answerText: 'O(1)', isCorrect: true },\r\n            { answerText: 'O(n)', isCorrect: false },\r\n            { answerText: 'Either O(1) or O(n)', isCorrect: false },\r\n            { answerText: 'O(logn)', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The concatenation of two lists can be performed in O(1) time. Which of the following variation of the linked list can be used?',\r\n        answerOptions: [\r\n            { answerText: 'Singly linked list', isCorrect: false },\r\n            { answerText: 'Doubly linked list', isCorrect: false },\r\n            { answerText: 'Circular doubly linked list', isCorrect: true },\r\n            { answerText: 'Array implementation of list', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?',\r\n        answerOptions: [\r\n            { answerText: 'Insertion Sort', isCorrect: false },\r\n            { answerText: 'Quick Sort', isCorrect: false },\r\n            { answerText: 'Heap Sort', isCorrect: false },\r\n            { answerText: 'Merge Sort', isCorrect: true },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default AlgoQues;","const OsQues = [\r\n    {\r\n        questionText: 'Which of the following is NOT a valid deadlock prevention scheme? (GATE CS 2000)',\r\n        answerOptions: [\r\n            { answerText: 'Release all resources before requesting a new resource', isCorrect: false },\r\n            { answerText: 'Number the resources uniquely and never request a lower numbered resource than the last one requested', isCorrect: false },\r\n            { answerText: 'Never request a resource after releasing any resource', isCorrect: true },\r\n            { answerText: 'Request and all required resources be allocated before execution', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following requires a device driver?',\r\n        answerOptions: [\r\n            { answerText: 'Register', isCorrect: false },\r\n            { answerText: 'Cache', isCorrect: false },\r\n            { answerText: 'Main memory', isCorrect: false },\r\n            { answerText: 'Disk', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Consider a machine with 64 MB physical memory and a 32-bit virtual address space. If the page size is 4KB, what is the approximate size of the page table?',\r\n        answerOptions: [\r\n            { answerText: '16 MB', isCorrect: false },\r\n            { answerText: '8 MB', isCorrect: false },\r\n            { answerText: '2 MB', isCorrect: true },\r\n            { answerText: '24 MB', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'More than one word are put in one cache block to',\r\n        answerOptions: [\r\n            { answerText: 'exploit the temporal locality of reference in a program', isCorrect: false },\r\n            { answerText: 'exploit the spatial locality of reference in a program', isCorrect: true },\r\n            { answerText: 'reduce the miss penalty', isCorrect: false },\r\n            { answerText: 'none of the above', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following need not necessarily be saved on a context switch between processes?',\r\n        answerOptions: [\r\n            { answerText: 'General purpose registers', isCorrect: false },\r\n            { answerText: 'Translation look-aside buffer', isCorrect: true },\r\n            { answerText: 'Program counter', isCorrect: false },\r\n            { answerText: 'All of the above', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following does not interrupt a running process?',\r\n        answerOptions: [\r\n            { answerText: 'A device', isCorrect: false },\r\n            { answerText: 'Timer', isCorrect: false },\r\n            { answerText: 'Scheduler process', isCorrect: true },\r\n            { answerText: 'Power failure', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following scheduling algorithms is non-preemptive?',\r\n        answerOptions: [\r\n            { answerText: 'Round Robin', isCorrect: false },\r\n            { answerText: 'First-In First-Out', isCorrect: true },\r\n            { answerText: 'Multilevel Queue Scheduling', isCorrect: false },\r\n            { answerText: 'Multilevel Queue Scheduling with Feedback', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Using a larger block size in a fixed block size file system leads to',\r\n        answerOptions: [\r\n            { answerText: 'better disk throughput but poorer disk space utilization', isCorrect: true },\r\n            { answerText: 'better disk throughput and better disk space utilization', isCorrect: false },\r\n            { answerText: 'poorer disk throughput but better disk space utilization', isCorrect: false },\r\n            { answerText: 'poorer disk throughput and poorer disk space utilization', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'In which one of the following page replacement policies, Belady’s anomaly may occur?',\r\n        answerOptions: [\r\n            { answerText: 'FIFO', isCorrect: true },\r\n            { answerText: 'Optimal', isCorrect: false },\r\n            { answerText: 'LRU', isCorrect: false },\r\n            { answerText: 'MRU', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The essential content(s) in each entry of a page table is / are',\r\n        answerOptions: [\r\n            { answerText: 'Virtual page number', isCorrect: false },\r\n            { answerText: 'Page frame number', isCorrect: true },\r\n            { answerText: 'Both virtual page number and page frame number', isCorrect: false },\r\n            { answerText: 'Access right information', isCorrect: false },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default OsQues;","const DbmsQues = [\r\n    {\r\n        questionText: 'An ________ is a set of entities of the same type that share the same properties, or attributes.',\r\n        answerOptions: [\r\n            { answerText: 'Entity set', isCorrect: true },\r\n            { answerText: 'Attribute set', isCorrect: false },\r\n            { answerText: 'Relation set', isCorrect: false },\r\n            { answerText: 'Entity model', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Not applicable condition can be represented in relation entry as',\r\n        answerOptions: [\r\n            { answerText: 'NA', isCorrect: false },\r\n            { answerText: '0', isCorrect: false },\r\n            { answerText: 'NULL', isCorrect: true },\r\n            { answerText: 'Blank Space', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following can be a multivalued attribute?',\r\n        answerOptions: [\r\n            { answerText: 'Phone_number', isCorrect: true },\r\n            { answerText: 'Name', isCorrect: false },\r\n            { answerText: 'Date_of_birth', isCorrect: false },\r\n            { answerText: 'All of the mentioned', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The ________ clause is used to list the attributes desired in the result of a query.',\r\n        answerOptions: [\r\n            { answerText: 'Where', isCorrect: false },\r\n            { answerText: 'Select', isCorrect: true },\r\n            { answerText: 'From', isCorrect: false },\r\n            { answerText: 'Distinct', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'A relational database consists of a collection of',\r\n        answerOptions: [\r\n            { answerText: 'Tables', isCorrect: true },\r\n            { answerText: 'Fields', isCorrect: false },\r\n            { answerText: 'Records', isCorrect: false },\r\n            { answerText: 'Keys', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The tuples of the relations can be of ________ order.',\r\n        answerOptions: [\r\n            { answerText: 'Any', isCorrect: true },\r\n            { answerText: 'Same', isCorrect: false },\r\n            { answerText: 'Sorted', isCorrect: false },\r\n            { answerText: 'Constant', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Consider attributes ID, CITY and NAME. Which one of this can be considered as a super key?',\r\n        answerOptions: [\r\n            { answerText: 'NAME', isCorrect: false },\r\n            { answerText: 'ID', isCorrect: true },\r\n            { answerText: 'CITY', isCorrect: false },\r\n            { answerText: 'CITY, ID', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which one of the following attribute can be taken as a primary key?',\r\n        answerOptions: [\r\n            { answerText: 'Name', isCorrect: false },\r\n            { answerText: 'Street', isCorrect: false },\r\n            { answerText: 'Id', isCorrect: true },\r\n            { answerText: 'Department', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following is used to denote the selection operation in relational algebra?',\r\n        answerOptions: [\r\n            { answerText: 'Pi (Greek)', isCorrect: false },\r\n            { answerText: 'Sigma (Greek)', isCorrect: true },\r\n            { answerText: 'Lambda (Greek)', isCorrect: false },\r\n            { answerText: 'Omega (Greek)', isCorrect: false },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default DbmsQues;","const CnQues = [\r\n    {\r\n        questionText: 'The protocol data unit(PDU) for the application layer in the Internet stack is',\r\n        answerOptions: [\r\n            { answerText: 'Segment', isCorrect: false },\r\n            { answerText: 'Datagram', isCorrect: false },\r\n            { answerText: 'Message', isCorrect: true },\r\n            { answerText: 'Frame', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'In the IPv4 addressing format, the number of networks allowed under Class C addresses is',\r\n        answerOptions: [\r\n            { answerText: '2^14', isCorrect: false },\r\n            { answerText: '2^7', isCorrect: false },\r\n            { answerText: '2^21', isCorrect: true },\r\n            { answerText: '2^24', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'A layer-4 firewall ( a device that can look at all protocol headers up to the transport layer) CANNOT',\r\n        answerOptions: [\r\n            { answerText: 'block HTTP traffic during 9:00PM and 5:00AM', isCorrect: true },\r\n            { answerText: 'block all ICMP traffic', isCorrect: false },\r\n            { answerText: 'stop incoming traffic from a specific IP address but allow outgoing traffic to same IP', isCorrect: false },\r\n            { answerText: 'block TCP traffic from a specific user on a specific IP address on multi-user system during 9:00PM and 5:00AM', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'One of the header fields in an IP datagram is the Time to Live (TTL) field. Which of the following statements best explains the need for this field?',\r\n        answerOptions: [\r\n            { answerText: 'It can be used to priortize packets', isCorrect: false },\r\n            { answerText: 'It can be used to reduce delays', isCorrect: false },\r\n            { answerText: 'It can be used to optimize throughput', isCorrect: false },\r\n            { answerText: 'It can be used to prevent packet looping', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Packets of the same session may be routed through different paths in:',\r\n        answerOptions: [\r\n            { answerText: 'TCP, but not UDP', isCorrect: false },\r\n            { answerText: 'TCP and UDP', isCorrect: true },\r\n            { answerText: 'UDP, but not TCP', isCorrect: false },\r\n            { answerText: 'Neither TCP nor UDP', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The address resolution protocol (ARP) is used for:',\r\n        answerOptions: [\r\n            { answerText: 'Finding the IP address from the DNS', isCorrect: false },\r\n            { answerText: 'Finding the IP address of the default gateway', isCorrect: false },\r\n            { answerText: 'Finding the IP address that corresponds to a MAC address', isCorrect: false },\r\n            { answerText: 'Finding the MAC address that corresponds to an IP address', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The maximum window size for data transmission using the selective reject protocol with n-bit frame sequence numbers is:',\r\n        answerOptions: [\r\n            { answerText: '2^n', isCorrect: false },\r\n            { answerText: '2^(n - 1)', isCorrect: true },\r\n            { answerText: '2^n - 1', isCorrect: false },\r\n            { answerText: '2^(n - 2)', isCorrect: false },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default CnQues;","const OopsQues = [\r\n    {\r\n        questionText: 'Which of the followings is/are automatically added to every class, if we do not write our own.',\r\n        answerOptions: [\r\n            { answerText: 'Copy Constructor', isCorrect: false },\r\n            { answerText: 'Assignment Operator', isCorrect: false },\r\n            { answerText: 'A constructor without any parameter', isCorrect: false },\r\n            { answerText: 'All of the above', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'We must use initializer list in a constructor when',\r\n        answerOptions: [\r\n            { answerText: 'There is a reference variable in class', isCorrect: false },\r\n            { answerText: 'There is a constant variable in class', isCorrect: false },\r\n            { answerText: 'There is an object of another class. And the other class doesn’t have default constructor.', isCorrect: false },\r\n            { answerText: 'All of the above', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which of the following is associated with objects?',\r\n        answerOptions: [\r\n            { answerText: 'State', isCorrect: false },\r\n            { answerText: 'Behaviour', isCorrect: false },\r\n            { answerText: 'Identity', isCorrect: false },\r\n            { answerText: 'All of the above', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Consider the following two statements: (a)A publicly derived class is a subtype of its base class. (b)Inheritance provides for code reuse.',\r\n        answerOptions: [\r\n            { answerText: 'Both the statements (a) and (b) are correct.', isCorrect: true },\r\n            { answerText: 'Neither of the statements (a) and (b) are correct', isCorrect: false },\r\n            { answerText: 'Statement (a) is correct and (b) is incorrect', isCorrect: false },\r\n            { answerText: 'Statement (a) is incorrect and (b) is correct.', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The feature in object-oriented programming that allows the same operation to be carried out differently, depending on the object, is:',\r\n        answerOptions: [\r\n            { answerText: 'Inheritance', isCorrect: false },\r\n            { answerText: 'Polymorphism', isCorrect: true },\r\n            { answerText: 'Overfunctioning', isCorrect: false },\r\n            { answerText: 'Overriding', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Can constructors be overloaded in derived class?',\r\n        answerOptions: [\r\n            { answerText: 'Yes, always', isCorrect: false },\r\n            { answerText: 'Yes, if derived class has no constructor', isCorrect: false },\r\n            { answerText: 'No, programmer can’t do it', isCorrect: false },\r\n            { answerText: 'No, never', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Why do we use constructor overloading?',\r\n        answerOptions: [\r\n            { answerText: 'To use different types of constructors', isCorrect: false },\r\n            { answerText: 'Because it’s a feature provided', isCorrect: false },\r\n            { answerText: 'To initialize the object in different ways', isCorrect: true },\r\n            { answerText: 'To differentiate one constructor from another', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Which is correct syntax?',\r\n        answerOptions: [\r\n            { answerText: 'classname objectname = new() integer;', isCorrect: false },\r\n            { answerText: 'classname objectname= new classname;', isCorrect: false },\r\n            { answerText: 'classname objectname= new classname();', isCorrect: true },\r\n            { answerText: 'classname objectname= new() classname();', isCorrect: false },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default OopsQues;","import DsQues from '../questions/DsQues'\r\nimport AlgoQues from '../questions/AlgoQues'\r\nimport OsQues from '../questions/OsQues'\r\nimport DbmsQues from '../questions/DbmsQues'\r\nimport CnQues from '../questions/CnQues'\r\nimport OopsQues from '../questions/OopsQues'\r\n\r\nconst topics = [\r\n    {\r\n        id: 1,\r\n        title: 'Data Structure',\r\n        path: '/ds',\r\n        no_of_questions: DsQues.length,\r\n        alloted_time: DsQues.length * 2,\r\n        quiz_path: '/quiz-ds'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Algorithm',\r\n        path: '/algo',\r\n        no_of_questions: AlgoQues.length,\r\n        alloted_time: AlgoQues.length * 2,\r\n        quiz_path: '/quiz-algo'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Operating System',\r\n        path: '/os',\r\n        no_of_questions: OsQues.length,\r\n        alloted_time: OsQues.length * 2,\r\n        quiz_path: '/quiz-os'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'DBMS',\r\n        path: '/dbms',\r\n        no_of_questions: DbmsQues.length,\r\n        alloted_time: DbmsQues.length * 2,\r\n        quiz_path: '/quiz-dbms'\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Computer Networks',\r\n        path: '/cn',\r\n        no_of_questions: CnQues.length,\r\n        alloted_time: CnQues.length * 2,\r\n        quiz_path: '/quiz-cn'\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Object Oriented Programming',\r\n        path: '/oops',\r\n        no_of_questions: OopsQues.length,\r\n        alloted_time: OopsQues.length * 2,\r\n        quiz_path: '/quiz-oops'\r\n    },\r\n]\r\n\r\nexport default topics","import React from 'react'\r\nimport SubjectCard from './SubjectCard'\r\nimport topics from '../data/topics'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Subjects() {\r\n    return (\r\n        <div className=\"subject-container\">\r\n            {topics.map((topic) => {\r\n                return (\r\n                    <div className=\"subject-div\" key={topic.title}>\r\n                        <Link to={topic.path}>\r\n                            <SubjectCard\r\n                                key={topic.id}\r\n                                title={topic.title}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Subjects","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/\">\r\n                    <li>Home</li>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <li>About</li>\r\n                </Link>\r\n                <Link to=\"/contact\">\r\n                    <li>Contact</li>\r\n                </Link>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Subjects from '../components/Subjects'\r\nimport Header from '../components/Header'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"topic-div\">\r\n                <button className=\"topic-head\"><h2>Topics</h2></button>\r\n            </div>\r\n            <Subjects />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","const AboutDetails = {\r\n    AboutTheApp: `This project is build completely using \"React JS\" (Javascript library). \r\n    It contains the topics, which are the \"Core of the Computer Science\" \r\n    stream.These topics were asked in the placement interviews \r\n    (technical) and also in your \"University Exams\". It helps you to test your core\r\n    knowledge in the limited amount of time.`,\r\n\r\n    AboutTheDev: `Hii, I'm Anas Riyaz. Currently I'm pursuing B.Tech in\r\n    Computer Engineering. I love to create web apps that are scalable\r\n    and maintainable as well.`\r\n}\r\n\r\nexport default AboutDetails","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport AboutDetails from '../details/AboutDetails'\r\n\r\nconst About = () => {\r\n    const { AboutTheApp, AboutTheDev } = AboutDetails\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"topic-div\">\r\n                <button className=\"topic-head\"><h2>About</h2></button> <br />\r\n                <button className=\"about-info\">\r\n                    <h2>About App</h2>\r\n                    <div className=\"para\">\r\n                        <p>{AboutTheApp}</p>\r\n                    </div>\r\n                    <h2>About Developer</h2>\r\n                    <div className=\"para\">\r\n                        <p>{AboutTheDev}</p>\r\n                    </div>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About","const ContactDetails = {\r\n    mail: 'mailto:anasriyaz92@gmail.com',\r\n    linkedIn: 'https://www.linkedin.com/in/anas-riyaz-462ab2185/',\r\n    gitHub: 'https://github.com/healer9'\r\n}\r\n\r\nexport default ContactDetails","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport ContactDetails from '../details/ContactDetails'\r\n\r\nconst Contact = () => {\r\n    const { mail, linkedIn, gitHub } = ContactDetails\r\n\r\n    const handleLinkedIn = () => { window.open(linkedIn) }\r\n    const handleGithub = () => { window.open(gitHub) }\r\n    const handleMail = () => { window.open(mail) }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"topic-div\">\r\n                <button className=\"contact-head\"><h2>Contact To Developer</h2></button> <br />\r\n                <button className=\"about-info contact\">\r\n                    <div className=\"contact-info\">\r\n                        <i onClick={handleMail} className=\"fa fa-envelope fa-3x\"></i>\r\n                        <i onClick={handleLinkedIn} className=\"fa fa-linkedin fa-3x\"></i>\r\n                        <i onClick={handleGithub} className=\"fa fa-github fa-3x\"></i>\r\n                    </div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\n\r\nfunction Footer() {\r\n    const currentYear = new Date().getFullYear()\r\n    return (\r\n        <footer>\r\n            <h3>Copyright &copy; {currentYear}, All rights reserved.</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst TopicPage = (props) => {\r\n\r\n    const instructions = `Once you select the option your are not able to change it, so be \"Carefull\".`\r\n    return (\r\n        <div className=\"topic-container\">\r\n            <div className=\"topic-info-page\">\r\n                <button className=\"topic-info\">\r\n                    <h2>Topic : {props.title}</h2>\r\n                </button>\r\n                <br />\r\n                <button className=\"topic-info\">\r\n                    <h2>No. of Questions : {props.no_of_questions}</h2>\r\n                </button>\r\n                <br />\r\n                <button className=\"topic-info\">\r\n                    <h2>Alloted Time : {props.alloted_time} minutes</h2>\r\n                </button>\r\n                <br />\r\n                <Link to={props.path}>\r\n                <button className=\"quiz-start\"\r\n                    onClick={() => {\r\n                        alert(instructions)\r\n                        // window.open(`${props.path}`)\r\n                    }}\r\n                >\r\n                    <h2>Start Quiz</h2>\r\n                </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopicPage","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Ds = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[0]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ds","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Algo = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[1]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Algo","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Os = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[2]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Os","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Dbms = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[3]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dbms","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Cn = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[4]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cn","import React from 'react'\r\nimport topics from '../data/topics'\r\nimport TopicPage from '../components/TopicPage'\r\nimport Header from '../components/Header'\r\n\r\nconst Oops = () => {\r\n    const { id, title, no_of_questions, alloted_time, quiz_path } = topics[5]\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TopicPage\r\n                key={id}\r\n                title={title}\r\n                path={quiz_path}\r\n                no_of_questions={no_of_questions}\r\n                alloted_time={alloted_time}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Oops","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst DsQuizHeader = () => {\r\n    const { title } = topics[0]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default DsQuizHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ScoreCard = (props) => {\r\n\r\n    const score = Math.floor((props.value / props.total) * 100)\r\n\r\n    return (\r\n        <div className=\"score-container\">\r\n            <button className=\"score-card\">\r\n                {(score === 100) ? (<h2 className=\"score-text\"><span className=\"score\">Bravo</span><br /><span>🏆</span></h2>)\r\n                    : (<><h2 className=\"score-text\">Number of Correct Answers : {props.value}</h2>\r\n                        <h2 className=\"score-text\">Number of Wrong Answers : {props.total - props.value}</h2></>)}\r\n                <h2 className=\"score-text score\">You Scored : {score} %</h2>\r\n            </button>\r\n            <br />\r\n            <Link to='/'>\r\n                <button className=\"exit-btn\"><h2>Exit</h2></button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCard","import React from 'react'\r\n\r\nconst InfoCard = (props) => {\r\n    return (\r\n        <div className=\"info-container\">\r\n            <p>Attempted</p>\r\n            <p className=\"dot\">:</p>\r\n            <p>{props.attempt}</p>\r\n\r\n            <p>Left</p>\r\n            <p className=\"dot\">:</p>\r\n            <p>{props.left}</p>\r\n\r\n            <p>Correct</p>\r\n            <p className=\"dot\">:</p>\r\n            <p>{props.correct}</p>\r\n\r\n            <p>Wrong</p>\r\n            <p className=\"dot\">:</p>\r\n            <p>{props.wrong}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard","import React, { useEffect, useState } from 'react'\r\nimport DsQues from '../questions/DsQues'\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport DsQuizHeader from '../quiz-header/DsQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\n\r\nconst QuizDs = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = DsQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = DsQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const alloted_time = end * 2\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <DsQuizHeader/>\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizDs","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst AlgoQuizHeader = () => {\r\n    const { title } = topics[1]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AlgoQuizHeader","import React, { useEffect, useState } from 'react'\r\nimport AlgoQues from '../questions/AlgoQues'\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport AlgoQuizHeader from '../quiz-header/AlgoQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\nimport topics from '../data/topics'\r\n\r\nconst QuizAlgo = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = AlgoQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = AlgoQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const { alloted_time } = topics[1]\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AlgoQuizHeader />\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard key={quesNo} value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default QuizAlgo","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst OsQuizHeader = () => {\r\n    const { title } = topics[2]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default OsQuizHeader","import React, { useEffect, useState } from 'react'\r\nimport OsQues from '../questions/OsQues'\r\nimport { useBeforeunload } from 'react-beforeunload'\r\nimport OsQuizHeader from '../quiz-header/OsQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\nimport topics from '../data/topics'\r\n\r\nconst QuizOs = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = OsQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = OsQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const { alloted_time } = topics[2]\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <OsQuizHeader />\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard key={quesNo} value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizOs","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst DbmsQuizHeader = () => {\r\n    const { title } = topics[3]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default DbmsQuizHeader","import React, { useEffect, useState } from 'react'\r\nimport DbmsQues from '../questions/DbmsQues'\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport DbmsQuizHeader from '../quiz-header/DbmsQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\nimport topics from '../data/topics'\r\n\r\nconst QuizDbms = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = DbmsQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = DbmsQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const { alloted_time } = topics[3]\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <DbmsQuizHeader />\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard key={quesNo} value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default QuizDbms","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst CnQuizHeader = () => {\r\n    const { title } = topics[4]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default CnQuizHeader","import React, { useEffect, useState } from 'react'\r\nimport CnQues from '../questions/CnQues'\r\nimport { useBeforeunload } from 'react-beforeunload'\r\nimport CnQuizHeader from '../quiz-header/CnQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\nimport topics from '../data/topics'\r\n\r\nconst QuizCn = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = CnQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = CnQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const { alloted_time } = topics[4]\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CnQuizHeader />\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard key={quesNo} value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default QuizCn","import React from 'react'\r\nimport topics from '../data/topics'\r\n\r\nconst OopsQuizHeader = () => {\r\n    const { title } = topics[5]\r\n    return (\r\n        <header>\r\n            <h1>Quiz App</h1>\r\n            <h2>Topic : {title}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default OopsQuizHeader","import React, { useEffect, useState } from 'react'\r\nimport OopsQues from '../questions/OopsQues'\r\nimport { useBeforeunload } from 'react-beforeunload'\r\nimport OopsQuizHeader from '../quiz-header/OopsQuizHeader'\r\nimport ScoreCard from '../components/ScoreCard'\r\nimport InfoCard from '../components/InfoCard'\r\nimport topics from '../data/topics'\r\n\r\nconst QuizOops = () => {\r\n    useBeforeunload((event) => event.preventDefault())\r\n    const start = 0\r\n    const end = OopsQues.length\r\n    const [quesNo, setQues] = useState(start)\r\n    const { questionText, answerOptions } = OopsQues[quesNo]\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n    const [attempt, setAttempt] = useState(0)\r\n\r\n    const handleClick = (isCorrect) => {\r\n        setAttempt(attempt + 1)\r\n        const nextQuestion = quesNo + 1\r\n\r\n        if (isCorrect === true) {\r\n            const incrementScore = score + 1\r\n            setScore(incrementScore)\r\n        }\r\n\r\n        if (nextQuestion < end) {\r\n            setQues(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const { alloted_time } = topics[5]\r\n    const [timerSeconds, setTimerSeconds] = useState(59)\r\n    const [timerMinutes, setTimerMinutes] = useState(alloted_time - 1)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (timerMinutes >= 0 && timerSeconds > 0) {\r\n            setTimeout(() => setTimerSeconds(timerSeconds - 1), 1000)\r\n        } else if (timerMinutes > 0 && timerSeconds === 0) {\r\n            setTimerSeconds(59)\r\n            setTimerMinutes(timerMinutes - 1)\r\n        } else if (timerMinutes === 0 && timerSeconds === 0) {\r\n            alert('Times Up !!!')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <OopsQuizHeader />\r\n            {((showScore) || (timerMinutes === 0 && timerSeconds === 0)) ? (\r\n                <ScoreCard key={quesNo} value={score} total={end} />\r\n            )\r\n                : (\r\n                    <div className=\"main-container\">\r\n                            <div className=\"quiz-container\">\r\n                                <button className=\"topic-info\">\r\n                                    <h2>Ques {quesNo + 1}. {questionText}</h2>\r\n                                </button>\r\n                               \r\n                                {answerOptions.map((answerOption) => {\r\n                                    return (\r\n                                        <button className=\"option\"\r\n                                            onClick={() => handleClick(answerOption.isCorrect)}\r\n                                            key={answerOption.answerText}\r\n                                        >\r\n                                            <h2>{answerOption.answerText}</h2>\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"update-container\">\r\n                                <h1 className=\"clock\">{timerMinutes} min : {timerSeconds} sec</h1>\r\n                                <InfoCard\r\n                                    key={quesNo}\r\n                                    attempt={attempt}\r\n                                    left={end - attempt}\r\n                                    correct={score}\r\n                                    wrong={attempt - score}\r\n                                    time={alloted_time}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizOops","import React from 'react'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport Contact from './pages/Contact'\r\nimport Footer from './components/Footer'\r\nimport Ds from './topic-pages/Ds'\r\nimport Algo from './topic-pages/Algo'\r\nimport Os from './topic-pages/Os'\r\nimport Dbms from './topic-pages/Dbms'\r\nimport Cn from './topic-pages/Cn'\r\nimport Oops from './topic-pages/Oops'\r\nimport QuizDs from './quiz-page/QuizDs'\r\nimport QuizAlgo from './quiz-page/QuizAlgo'\r\nimport QuizOs from './quiz-page/QuizOs'\r\nimport QuizDbms from './quiz-page/QuizDbms'\r\nimport QuizCn from './quiz-page/QuizCn'\r\nimport QuizOops from './quiz-page/QuizOops'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            \r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n\r\n                {/* topics route */}\r\n                <Route path=\"/ds\" component={Ds} />\r\n                <Route path=\"/algo\" component={Algo} />\r\n                <Route path=\"/os\" component={Os} />\r\n                <Route path=\"/dbms\" component={Dbms} />\r\n                <Route path=\"/cn\" component={Cn} />\r\n                <Route path=\"/oops\" component={Oops} />\r\n\r\n                {/* quiz start page route */}\r\n                <Route path=\"/quiz-ds\" component={QuizDs} />\r\n                <Route path=\"/quiz-algo\" component={QuizAlgo} />\r\n                <Route path=\"/quiz-os\" component={QuizOs} />\r\n                <Route path=\"/quiz-dbms\" component={QuizDbms} />\r\n                <Route path=\"/quiz-cn\" component={QuizCn} />\r\n                <Route path=\"/quiz-oops\" component={QuizOops} />\r\n            \r\n            <Footer />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}